#include <stdio.h>
#include <string.h>

int longestCommonSubsequence(char *text1, char *text2) {
    int m = strlen(text1);
    int n = strlen(text2);
    
    // Create a 2D DP array
    int dp[m + 1][n + 1];

    // Initialize the DP table
    for (int i = 0; i <= m; i++) {
        for (int j = 0; j <= n; j++) {
            if (i == 0 || j == 0) {
                dp[i][j] = 0; // LCS of any string with an empty string is 0
            } else if (text1[i - 1] == text2[j - 1]) {
                dp[i][j] = dp[i - 1][j - 1] + 1; // Characters match
            } else {
                dp[i][j] = (dp[i - 1][j] > dp[i][j - 1]) ? dp[i - 1][j] : dp[i][j - 1]; // Take max
            }
        }
    }

    return dp[m][n]; // Length of the LCS
}

int main() {
    char text1[] = "abcde";
    char text2[] = "ace";
    
    int result = longestCommonSubsequence(text1, text2);
    printf("Length of Longest Common Subsequence: %d\n", result);
    
    return 0;
}
